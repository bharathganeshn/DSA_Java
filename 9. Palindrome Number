class Solution {
    // using the method of conveerting into string

    // private boolean checkpalindrome(String num){
    //     int left = 0;
    //     int right = num.length()-1;

    //     while(left < right){
    //         if(num.charAt(left) != num.charAt(right)){
    //             return false;
    //         }
    //         left++;
    //         right--;
    //     }
    //     return true;
    // }

    // public boolean isPalindrome(int x) {
    //     if(x < 0){
    //         return false;
    //     }
    //     String num = x + "";
    //     return checkpalindrome(num);
        
    // }

    // Using the last digit approach

    public boolean isPalindrome(int x) {
        
        if(x < 0){
            return false;
        }
        int rev = 0;
        int temp = x ;
        
        while(x > 0){
            int ld = x % 10;
            rev = (rev*10) + ld ;
            x = x / 10;
        }

        if(rev == temp){
            return true;
        }
        else{
            return false;
        }
        
        
    }
}

// 1. Last digit 2.adding last digit to the rev number 
