class Solution {
    public List<Integer> spiralOrder(int[][] matrix) {
        List<Integer> ans = new ArrayList<Integer>();
        
        int n = matrix.length;
        int m = matrix[0].length;

        int top = 0 , bottom = n -1;
        int left = 0 , right = m -1 ;

        while(top <= bottom && left <= right){

            // left -> right
            for(int i=left;i<=right;i++){
                ans.add(matrix[top][i]);                
            }
            top++;
            // top  -> bottom 
            for(int i = top ; i <= bottom ;i++){
                ans.add(matrix[i][right]);
            }
            right--;
            // Right -> left
            if(top <= bottom){
                for(int i = right;i>= left;i--){
                    ans.add(matrix[bottom][i]);
                }
                bottom--;
            }
            // bottom -> top 
            if(left <= right){
                for(int i = bottom;i>= top;i--){
                    ans.add(matrix[i][left]);
                }
                left++;
            }
        
        }
        return ans;
    }
}
