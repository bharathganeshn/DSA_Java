class Solution {
    public void nextPermutation(int[] nums) {
        int n = nums.length;
        // Step - 1 Find the longest prefix indix 
        int ind = -1;
        for(int i = n-2;i>=0;i--){
            if(nums[i] < nums[i+1]){
                ind = i;
                break;
            }
        }
        // If ind == -1
        if(ind == -1){
            reverse(nums,0,n-1);
            return;
        }
        // Step - 2 Find the next greatest element than nums[ind]
        for(int i=n-1;i>=0;i--){
            if(nums[i] > nums[ind]){
                // swap the elements i->ind
                int temp = nums[i];
                nums[i] = nums[ind];
                nums[ind] = temp;
                break;
            }
        }
        // Step - 3 Reverse the array from nums[ind+1] -> nums[n-1]
        reverse(nums,ind+1,n-1);

    }
    private void reverse(int[] nums ,int left ,int right){
        while(left < right){
            int temp = nums[left];
            nums[left] = nums[right];
            nums[right] = temp;
            left++;
            right--;
        }
    }
}
